{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\furka\\\\OneDrive\\\\Belgeler\\\\GitHub\\\\reactOneInternship\\\\src\\\\Pages\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport axios from \"axios\";\nimport CustomButton from \"../components/CustomButton\";\nimport clsx from \"clsx\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  },\n  box: {\n    margin: \"100px\",\n    display: \"flex\"\n  },\n  outerBox: {\n    marginTop: \"25px\",\n    marginLeft: \"400px\",\n    display: \"flex\"\n  },\n  innerBox: {\n    margin: \"25px\"\n  },\n  buttonGroup: {\n    marginRight: \"25px\"\n  },\n  button: {\n    marginRight: \"100px\"\n  },\n  formControl: {\n    minWidth: 120\n  }\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\n\nconst Form = () => {\n  _s();\n\n  const classes = useStyles();\n  const [userName, setUserName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [weight, setWeight] = useState(0);\n  const [height, setHeight] = useState(0);\n  const [gender, setGender] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n  const [isImperialUnit, setIsImperialUnit] = useState(false);\n  const switchRef = useRef();\n  useEffect(() => {\n    getCountries();\n  }, []);\n  useEffect(() => {\n    var _JSON$parse;\n\n    const savedUserInfo = localStorage.getItem(\"userInformation\");\n    ((_JSON$parse = JSON.parse(savedUserInfo)) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.isImperialUnit) && setIsImperialUnit(JSON.parse(savedUserInfo).isImperialUnit);\n  }, []);\n\n  const surnameHandler = value => {\n    setSurname(value);\n  };\n\n  const userNameHandler = value => {\n    setUserName(value);\n  };\n\n  const weightHandler = value => {\n    setWeight(value);\n  };\n\n  const heightHandler = value => {\n    setHeight(value);\n  };\n\n  const genderHandler = value => {\n    setGender(value);\n  };\n\n  const unitHandler = () => {\n    setIsImperialUnit(oldState => !oldState);\n  };\n\n  const countryHandler = value => {\n    setCountry(value);\n  };\n\n  const getSwitchInfo = () => {\n    console.log(switchRef);\n  };\n\n  const submitHandler = () => {\n    const userInfo = {\n      surname,\n      weight,\n      height,\n      userName,\n      gender,\n      isImperialUnit,\n      country\n    };\n    const stringUserInfo = JSON.stringify(userInfo);\n    localStorage.setItem(\"userInformation\", stringUserInfo);\n  };\n\n  const getCountries = () => {\n    axios.get(\"https://countriesnow.space/api/v0.1/countries\").then(res => {\n      const countryArr = res.data.data.map((countryItem, index) => {\n        return {\n          countryName: countryItem.country,\n          id: index\n        };\n      });\n      setCountries(countryArr);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    classes: classes.box,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: classes.outerBox,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: classes.innerBox,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"name-input\",\n          label: \"Name\",\n          variant: \"outlined\",\n          onChange: e => userNameHandler(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.innerBox,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          id: \"surname-input\",\n          label: \"Surname\",\n          variant: \"outlined\",\n          onChange: e => surnameHandler(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.innerBox,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"coutry-label\",\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"country-label\",\n            id: \"country-select\",\n            value: country,\n            onChange: e => countryHandler(e.target.value),\n            children: countries.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: item.id,\n              children: item.countryName\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.outerBox,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: classes.innerBox,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Weight\",\n          type: \"number\",\n          id: \"weight-input\",\n          onChange: e => weightHandler(e.target.value),\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: isImperialUnit ? \"Lbs\" : \"Kg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.innerBox,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          ref: switchRef,\n          label: \"Height\",\n          id: \"height-input\",\n          type: \"number\",\n          onChange: e => heightHandler(e.target.value),\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: isImperialUnit ? \"Inc\" : \"Cm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.innerBox,\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: isImperialUnit,\n            onChange: () => unitHandler(),\n            name: \"checkedA\",\n            inputProps: {\n              \"aria-label\": \"secondary checkbox\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this),\n          label: \"Is Unit Imperial\",\n          labelPlacement: \"top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.innerBox,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          className: clsx(classes.buttonGroup, classes.button),\n          component: \"fieldset\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            \"aria-label\": \"gender\",\n            name: \"gender1\",\n            value: gender,\n            onChange: e => genderHandler(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"female\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 26\n              }, this),\n              label: \"Female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"male\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 55\n              }, this),\n              label: \"Male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"other\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 26\n              }, this),\n              label: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.outerBox,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: classes.innerBox,\n        children: /*#__PURE__*/_jsxDEV(CustomButton, {\n          buttonFunction: () => submitHandler(),\n          buttonText: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.innerBox,\n        children: /*#__PURE__*/_jsxDEV(CustomButton, {\n          buttonFunction: () => getSwitchInfo(),\n          buttonText: \"Get Ref Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.innerBox,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: classes.table,\n            \"aria-label\": \"simple table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Surname\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Weight\\xA0(g)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Protein\\xA0(g)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: row.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.calories\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.fat\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.carbs\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.protein\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 23\n                }, this)]\n              }, row.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"nboSjKb4wPGqTvyMIr7C7OSXUmg=\", false, function () {\n  return [useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/furka/OneDrive/Belgeler/GitHub/reactOneInternship/src/Pages/Form.js"],"names":["React","useState","useEffect","useRef","TextField","Box","makeStyles","InputAdornment","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","Switch","InputLabel","MenuItem","Select","axios","CustomButton","clsx","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","table","minWidth","box","margin","display","outerBox","marginTop","marginLeft","innerBox","buttonGroup","marginRight","button","formControl","createData","name","calories","fat","carbs","protein","rows","Form","classes","userName","setUserName","surname","setSurname","weight","setWeight","height","setHeight","gender","setGender","country","setCountry","countries","setCountries","isImperialUnit","setIsImperialUnit","switchRef","getCountries","savedUserInfo","localStorage","getItem","JSON","parse","surnameHandler","value","userNameHandler","weightHandler","heightHandler","genderHandler","unitHandler","oldState","countryHandler","getSwitchInfo","console","log","submitHandler","userInfo","stringUserInfo","stringify","setItem","get","then","res","countryArr","data","map","countryItem","index","countryName","id","e","target","item","startAdornment","row"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport axios from \"axios\";\r\nimport CustomButton from \"../components/CustomButton\";\r\nimport clsx from \"clsx\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  box: {\r\n    margin: \"100px\",\r\n    display: \"flex\",\r\n    \r\n  },\r\n  outerBox: {\r\n    marginTop: \"25px\",\r\n    marginLeft:\"400px\",\r\n    display: \"flex\",\r\n  },\r\n  innerBox: {\r\n    margin: \"25px\",\r\n  },\r\n  buttonGroup: {\r\n    marginRight: \"25px\",\r\n  },\r\n  button: {\r\n    marginRight: \"100px\",\r\n  },\r\n  formControl: {\r\n    minWidth: 120,\r\n    \r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst Form = () => {\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const [weight, setWeight] = useState(0);\r\n  const [height, setHeight] = useState(0);\r\n  const [gender, setGender] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [countries, setCountries] = useState([]);\r\n  const [isImperialUnit, setIsImperialUnit] = useState(false);\r\n\r\n  const switchRef = useRef();\r\n\r\n  useEffect(() => {\r\n    getCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const savedUserInfo = localStorage.getItem(\"userInformation\");\r\n    JSON.parse(savedUserInfo)?.isImperialUnit &&\r\n      setIsImperialUnit(JSON.parse(savedUserInfo).isImperialUnit);\r\n  }, []);\r\n\r\n  const surnameHandler = (value) => {\r\n    setSurname(value);\r\n  };\r\n\r\n  const userNameHandler = (value) => {\r\n    setUserName(value);\r\n  };\r\n\r\n  const weightHandler = (value) => {\r\n    setWeight(value);\r\n  };\r\n\r\n  const heightHandler = (value) => {\r\n    setHeight(value);\r\n  };\r\n\r\n  const genderHandler = (value) => {\r\n    setGender(value);\r\n  };\r\n\r\n  const unitHandler = () => {\r\n    setIsImperialUnit((oldState) => !oldState);\r\n  };\r\n\r\n  const countryHandler = (value) => {\r\n    setCountry(value);\r\n  };\r\n\r\n  const getSwitchInfo = () => {\r\n    console.log(switchRef);\r\n  };\r\n\r\n  const submitHandler = () => {\r\n    const userInfo = {\r\n      surname,\r\n      weight,\r\n      height,\r\n      userName,\r\n      gender,\r\n      isImperialUnit,\r\n      country,\r\n    };\r\n\r\n    const stringUserInfo = JSON.stringify(userInfo);\r\n    localStorage.setItem(\"userInformation\", stringUserInfo);\r\n  };\r\n\r\n  const getCountries = () => {\r\n    axios.get(\"https://countriesnow.space/api/v0.1/countries\").then((res) => {\r\n      const countryArr = res.data.data.map((countryItem, index) => {\r\n        return { countryName: countryItem.country, id: index };\r\n      });\r\n\r\n      setCountries(countryArr);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box classes={classes.box}>\r\n      <Box className={classes.outerBox}>\r\n        <Box className={classes.innerBox}>\r\n          <TextField\r\n            id=\"name-input\"\r\n            label=\"Name\"\r\n            variant=\"outlined\"\r\n            onChange={(e) => userNameHandler(e.target.value)}\r\n          />\r\n        </Box>\r\n        <Box className={classes.innerBox}>\r\n          <TextField\r\n            required\r\n            id=\"surname-input\"\r\n            label=\"Surname\"\r\n            variant=\"outlined\"\r\n            onChange={(e) => surnameHandler(e.target.value)}\r\n          />\r\n        </Box>\r\n        <Box className={classes.innerBox}>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"coutry-label\">Country</InputLabel>\r\n            <Select\r\n              labelId=\"country-label\"\r\n              id=\"country-select\"\r\n              value={country}\r\n              onChange={(e) => countryHandler(e.target.value)}\r\n            >\r\n              {countries.map((item) => (\r\n                <MenuItem key={item.id} value={item.id}>\r\n                  {item.countryName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n      </Box>\r\n      <Box className={classes.outerBox}>\r\n        \r\n        <Box className={classes.innerBox}>\r\n          <TextField\r\n            label=\"Weight\"\r\n            type=\"number\"\r\n            id=\"weight-input\"\r\n            onChange={(e) => weightHandler(e.target.value)}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  {isImperialUnit ? \"Lbs\" : \"Kg\"}\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Box>\r\n        <Box className={classes.innerBox}>\r\n          <TextField\r\n            ref={switchRef}\r\n            label=\"Height\"\r\n            id=\"height-input\"\r\n            type=\"number\"\r\n            onChange={(e) => heightHandler(e.target.value)}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  {isImperialUnit ? \"Inc\" : \"Cm\"}\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Box>\r\n        \r\n        <Box className={classes.innerBox}>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={isImperialUnit}\r\n                onChange={() => unitHandler()}\r\n                name=\"checkedA\"\r\n                inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n              />\r\n            }\r\n            label=\"Is Unit Imperial\"\r\n            labelPlacement=\"top\"\r\n          />\r\n        </Box>\r\n        <Box className={classes.innerBox}>\r\n          <FormControl\r\n            className={clsx(classes.buttonGroup, classes.button)}\r\n            component=\"fieldset\"\r\n          >\r\n            <FormLabel component=\"legend\">Gender</FormLabel>\r\n            <RadioGroup\r\n              aria-label=\"gender\"\r\n              name=\"gender1\"\r\n              value={gender}\r\n              onChange={(e) => genderHandler(e.target.value)}\r\n            >\r\n              <FormControlLabel\r\n                value=\"female\"\r\n                control={<Radio />}\r\n                label=\"Female\"\r\n              />\r\n              <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n              <FormControlLabel\r\n                value=\"other\"\r\n                control={<Radio />}\r\n                label=\"Other\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Box>\r\n        </Box>\r\n        <Box className={classes.outerBox}>\r\n          <Box className={classes.innerBox}>\r\n            <CustomButton\r\n              buttonFunction={() => submitHandler()}\r\n              buttonText={\"Submit\"}\r\n            ></CustomButton>\r\n          </Box>\r\n          <Box className={classes.innerBox}>\r\n            <CustomButton\r\n              buttonFunction={() => getSwitchInfo()}\r\n              buttonText={\"Get Ref Info\"}\r\n            ></CustomButton>\r\n          </Box>\r\n\r\n          <Box className={classes.innerBox}>\r\n            <TableContainer component={Paper}>\r\n              <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell align=\"right\">Surname</TableCell>\r\n                    <TableCell align=\"right\">Country</TableCell>\r\n                    <TableCell align=\"right\">Weight&nbsp;(g)</TableCell>\r\n                    <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.map((row) => (\r\n                    <TableRow key={row.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Box>\r\n        </Box>\r\n\r\n      \r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}